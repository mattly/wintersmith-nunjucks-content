// Generated by CoffeeScript 1.7.1
var async, fs, nunjucks, path,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

fs = require('fs');

path = require('path');

nunjucks = require('nunjucks');

async = require('async');

module.exports = function(env, ready) {
  var NunjucksContent, NunjucksGivenLoader, loadFilters;
  NunjucksContent = (function(_super) {
    __extends(NunjucksContent, _super);

    function NunjucksContent(filepath, metadata, tpl) {
      this.filepath = filepath;
      this.metadata = metadata;
      this.tpl = tpl;
    }

    NunjucksContent.prototype.getFilename = function() {
      this.filepath.relative = this.filepath.relative.replace(/nunjucks$/, 'html');
      return NunjucksContent.__super__.getFilename.apply(this, arguments);
    };

    NunjucksContent.prototype.getHtml = function() {
      return this.tpl.render(this.metadata);
    };

    return NunjucksContent;

  })(env.plugins.Page);
  NunjucksGivenLoader = (function() {
    function NunjucksGivenLoader(opts) {
      this.opts = opts;
    }

    NunjucksGivenLoader.prototype.getSource = function(name) {
      if (name === 'given') {
        return {
          src: this.opts.given,
          path: this.opts.path
        };
      } else {
        return this.opts.fallback.getTemplate(name);
      }
    };

    NunjucksGivenLoader.prototype.on = function() {};

    return NunjucksGivenLoader;

  })();
  loadFilters = function(nenv) {
    if (env.config.nunjucks && env.config.nunjucks.filterdir) {
      env.config.nunjucks.filters.map(function(name) {
        var file, filter;
        file = path.join(env.config.nunjucks.filterdir, name + ".js");
        filter = env.loadModule(env.resolvePath(file), true);
        nenv.addFilter(name, filter);
      });
    }
  };
  NunjucksContent.fromFile = function(filepath, callback) {
    return async.waterfall([
      function(next) {
        return fs.readFile(filepath.full, next);
      }, function(buffer, next) {
        return env.plugins.MarkdownPage.extractMetadata(buffer.toString(), next);
      }, function(result, next) {
        var contentPath, error, nenv, nloader, template;
        contentPath = path.dirname(filepath.full);
        nloader = new NunjucksGivenLoader({
          given: result.markdown,
          path: contentPath,
          fallback: new nunjucks.FileSystemLoader(contentPath)
        });
        nenv = new nunjucks.Environment(nloader);
        loadFilters(nenv);
        try {
          template = nenv.getTemplate('given');
          return next(null, new NunjucksContent(filepath, result.metadata, template));
        } catch (_error) {
          error = _error;
          return next(error);
        }
      }
    ], callback);
  };
  env.registerContentPlugin('pages', "**/*.*(html|nunjucks)", NunjucksContent);
  return ready();
};
